name: Build mt7981 hanwckf/immortalwrt-798x

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
      
env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x.git
  REPO_BRANCH: openwrt-21.02
  TZ: Asia/Shanghai
  FEEDS_CONF: feeds.conf.default

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      actions: write
      
    steps:
    
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang clangd cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev \
          libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev \
          libssl-dev libtool lld lldb lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 \
          python3 python3-pip python3-ply python3-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig \
          texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /srcdir
        sudo chown $USER:$GROUPS /srcdir

    - name: Clone source code
      working-directory: /srcdir
      run: |
        echo "Free space:"
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /srcdir/openwrt $GITHUB_WORKSPACE/openwrt
        echo "REPO_HEAD=_$(git ls-remote $REPO_URL HEAD | head -c7)" >> $GITHUB_ENV

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom config
      run: |
        cd openwrt
        cp -f ./defconfig/mt7986-ax6000.config .config
        
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8 V=11
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: ImmortalWrt_bin_${{ env.REPO_HEAD }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: (!cancelled())
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ImmortalWrt_firmware_${{ env.REPO_HEAD }}
        path: ${{ env.FIRMWARE }}
        
    - name: Generate release tag
      id: tag
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        echo "release_tag=ImmortalWrt_${{ env.REPO_HEAD }}" >> $GITHUB_OUTPUT
        touch release.txt
        echo "ImmortalWrt_${{ env.REPO_HEAD }}" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      id: release
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Clean Compile
      id: clean-compile
      run: |
        cd openwrt
        make clean

    - name: Cache Compile
      id: cache-compile
      uses: actions/cache/save@v4
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        path: openwrt
        key: ${{ runner.os }}-openwrt-${{ hashFiles('openwrt/feeds.conf.default') }}

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 7
        keep_minimum_runs: 3
